{"ast":null,"code":"var _jsxFileName = \"/Users/thetrung/Downloads/wtg-master@566a617a8c4/src/components/preview-bar/createNode.layout.jsx\";\nimport React, { useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport cogoToast from 'cogo-toast';\nimport { CREATE_CHILD_NODE } from '../../services/graphQL/editorApiHelper';\nCreatingContent.propTypes = {\n  createNewNode: PropTypes.func.isRequired,\n  closeForm: PropTypes.func.isRequired,\n  isParentRootNode: PropTypes.bool.isRequired,\n  parentId: PropTypes.string.isRequired\n};\n\nfunction CreatingContent(props) {\n  // Define defaults for all form fields so they can be reset on form submission or cancellation\n  const defaultState = {\n    and: '',\n    because: '',\n    description: '',\n    entityType: 'lever',\n    if: '',\n    logic: '',\n    name: 'New Node',\n    necessity: '',\n    optionalityAndSequence: '',\n    referenceId: 'Ref ID',\n    sufficiency: '',\n    tactic: '',\n    then: ''\n  };\n  const [formData, setFormData] = useState(defaultState);\n  const [createNewChildNode] = useMutation(CREATE_CHILD_NODE);\n  const formRef = useRef();\n\n  function handleFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(formData => ({ ...formData,\n      [name]: value\n    }));\n  }\n\n  function createNewData(event) {\n    event.preventDefault();\n    createNewChildNode({\n      variables: {\n        and: formData.and,\n        because: formData.because,\n        description: formData.description,\n        entityType: formData.entityType,\n        if: formData.if,\n        logic: formData.logic,\n        name: formData.necessity,\n        necessity: formData.name,\n        optionalityAndSequence: formData.optionalityAndSequence,\n        parentId: props.parentId,\n        referenceId: formData.referenceId,\n        sufficiency: formData.sufficiency,\n        tactic: formData.tactic,\n        then: formData.then\n      }\n    }).then(res => {\n      cogoToast.success('Created new node');\n      formRef.current.scrollTop = 0;\n      props.createNewNode(res.data.createChildNode);\n      props.closeForm();\n      setFormData(defaultState);\n    }).catch(err => cogoToast.error(err));\n  }\n\n  function handleCloseFormClick(event) {\n    event.preventDefault();\n    props.closeForm();\n    formRef.current.scrollTop = 0;\n    setFormData(defaultState);\n  }\n\n  useEffect(() => {}, [formData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: createNewData,\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: formRef,\n    className: \"previewBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Reference ID\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"previewBar-inputGroup-input\",\n    name: \"referenceId\",\n    value: formData.referenceId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Entity Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"entityType\",\n    value: formData.entityType,\n    className: \"previewBar-inputGroup-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, props.isParentRootNode ? /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"horizon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"Horizon\") : null, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"lever\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Lever\"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"injection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"Injection\"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"strategy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"Strategy\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"previewBar-inputGroup-input\",\n    name: \"name\",\n    value: formData.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"description\",\n    value: formData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Tactic\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"tactic\",\n    value: formData.tactic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"Necessity\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"necessity\",\n    value: formData.necessity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Logic\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"logic\",\n    value: formData.logic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"If\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    value: formData.if,\n    placeholder: formData.necessity !== '' ? '[If] is recommended if you have [Necessity]' : '',\n    name: \"if\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, \"and\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    value: formData.and,\n    placeholder: formData.tactic !== '' ? '[And] is recommended if you have [Tactic]' : '',\n    name: \"and\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"then\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    value: formData.then,\n    placeholder: formData.description !== '' ? '[Then] is recommended if you have [Description]' : '',\n    name: \"then\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"because\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    value: formData.because,\n    placeholder: formData.logic !== '' ? '[Because] is recommended if you have [Logic]' : '',\n    name: \"because\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"Sufficiency\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    value: formData.sufficiency,\n    name: \"sufficiency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"Optionality & Sequence\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    value: formData.optionalityAndSequence,\n    name: \"optionalityAndSequence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-ctaGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBar-ctaGroup-button previewBar-ctaGroup-button--negative\",\n    onClick: handleCloseFormClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBar-ctaGroup-button previewBar-ctaGroup-button--positive\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, \"Create Node\"))));\n}\n\nexport default CreatingContent;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-master@566a617a8c4/src/components/preview-bar/createNode.layout.jsx"],"names":["React","useRef","useState","useEffect","PropTypes","useMutation","cogoToast","CREATE_CHILD_NODE","CreatingContent","propTypes","createNewNode","func","isRequired","closeForm","isParentRootNode","bool","parentId","string","props","defaultState","and","because","description","entityType","if","logic","name","necessity","optionalityAndSequence","referenceId","sufficiency","tactic","then","formData","setFormData","createNewChildNode","formRef","handleFormChange","event","value","target","createNewData","preventDefault","variables","res","success","current","scrollTop","data","createChildNode","catch","err","error","handleCloseFormClick","display"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport cogoToast from 'cogo-toast';\nimport { CREATE_CHILD_NODE } from '../../services/graphQL/editorApiHelper';\n\nCreatingContent.propTypes = {\n    createNewNode: PropTypes.func.isRequired,\n    closeForm: PropTypes.func.isRequired,\n    isParentRootNode: PropTypes.bool.isRequired,\n    parentId: PropTypes.string.isRequired,\n};\n\nfunction CreatingContent(props) {\n    // Define defaults for all form fields so they can be reset on form submission or cancellation\n    const defaultState = {\n        and: '',\n        because: '',\n        description: '',\n        entityType: 'lever',\n        if: '',\n        logic: '',\n        name: 'New Node',\n        necessity: '',\n        optionalityAndSequence: '',\n        referenceId: 'Ref ID',\n        sufficiency: '',\n        tactic: '',\n        then: '',\n    };\n    const [formData, setFormData] = useState(defaultState);\n    const [createNewChildNode] = useMutation(CREATE_CHILD_NODE);\n    const formRef = useRef();\n\n    function handleFormChange(event) {\n        const { name, value } = event.target;\n        setFormData(formData => ({\n            ...formData,\n            [name]: value,\n        }));\n    }\n\n    function createNewData(event) {\n        event.preventDefault();\n        createNewChildNode({\n            variables: {\n                and: formData.and,\n                because: formData.because,\n                description: formData.description,\n                entityType: formData.entityType,\n                if: formData.if,\n                logic: formData.logic,\n                name: formData.necessity,\n                necessity: formData.name,\n                optionalityAndSequence: formData.optionalityAndSequence,\n                parentId: props.parentId,\n                referenceId: formData.referenceId,\n                sufficiency: formData.sufficiency,\n                tactic: formData.tactic,\n                then: formData.then,\n            },\n        })\n            .then(res => {\n                cogoToast.success('Created new node');\n                formRef.current.scrollTop = 0;\n                props.createNewNode(res.data.createChildNode);\n                props.closeForm();\n                setFormData(defaultState);\n            })\n            .catch(err => cogoToast.error(err));\n    }\n\n    function handleCloseFormClick(event) {\n        event.preventDefault();\n        props.closeForm();\n        formRef.current.scrollTop = 0;\n        setFormData(defaultState);\n    }\n\n    useEffect(() => {}, [formData]);\n\n    return (\n        <div>\n            <form onSubmit={createNewData} onChange={handleFormChange}>\n                <input type='submit' style={{ display: 'none' }} />\n                <div ref={formRef} className='previewBar'>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Reference ID</label>\n                        <input\n                            className='previewBar-inputGroup-input'\n                            name='referenceId'\n                            value={formData.referenceId}\n                        ></input>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Entity Type</label>\n                        <select\n                            name='entityType'\n                            value={formData.entityType}\n                            className='previewBar-inputGroup-dropdown'\n                        >\n                            {props.isParentRootNode ? (\n                                <option className='previewBar-inputGroup-dropdown-item' value='horizon'>\n                                    Horizon\n                                </option>\n                            ) : null}\n                            <option className='previewBar-inputGroup-dropdown-item' value='lever'>\n                                Lever\n                            </option>\n                            <option className='previewBar-inputGroup-dropdown-item' value='injection'>\n                                Injection\n                            </option>\n                            <option className='previewBar-inputGroup-dropdown-item' value='strategy'>\n                                Strategy\n                            </option>\n                        </select>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Name</label>\n                        <input className='previewBar-inputGroup-input' name='name' value={formData.name}></input>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Description</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='description'\n                            value={formData.description}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Tactic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='tactic'\n                            value={formData.tactic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Necessity</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='necessity'\n                            value={formData.necessity}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Logic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='logic'\n                            value={formData.logic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>If</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.if}\n                            placeholder={formData.necessity !== '' ? '[If] is recommended if you have [Necessity]' : ''}\n                            name='if'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>and</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.and}\n                            placeholder={formData.tactic !== '' ? '[And] is recommended if you have [Tactic]' : ''}\n                            name='and'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>then</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.then}\n                            placeholder={\n                                formData.description !== '' ? '[Then] is recommended if you have [Description]' : ''\n                            }\n                            name='then'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>because</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.because}\n                            placeholder={formData.logic !== '' ? '[Because] is recommended if you have [Logic]' : ''}\n                            name='because'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Sufficiency</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.sufficiency}\n                            name='sufficiency'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Optionality &amp; Sequence</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.optionalityAndSequence}\n                            name='optionalityAndSequence'\n                        ></textarea>\n                    </div>\n                </div>\n                <div className='previewBar-ctaGroup'>\n                    <button\n                        className='previewBar-ctaGroup-button previewBar-ctaGroup-button--negative'\n                        onClick={handleCloseFormClick}\n                    >\n                        Cancel\n                    </button>\n                    <button className='previewBar-ctaGroup-button previewBar-ctaGroup-button--positive' type='submit'>\n                        Create Node\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatingContent;\n"]},"metadata":{},"sourceType":"module"}