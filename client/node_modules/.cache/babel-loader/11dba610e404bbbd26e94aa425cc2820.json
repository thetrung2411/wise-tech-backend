{"ast":null,"code":"var _jsxFileName = \"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/tree-status-dropdown/statusDropdown.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as Ellipsis } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/icon-ellipsis.svg\";\nimport './statusDropdown.scss';\nexport default function StatusDropdown(props) {\n  const [showMenu, setShowMenu] = useState(false);\n  const menu = useRef();\n\n  function toggleShowMenu(event) {\n    event.preventDefault();\n\n    if (showMenu) {\n      setShowMenu(false);\n    } else {\n      setShowMenu(true);\n    }\n  }\n\n  function handleOutsideClick(event) {\n    if (!menu.current.contains(event.target)) {\n      setShowMenu(false);\n    }\n  }\n\n  function handleSelection(event) {\n    event.preventDefault();\n    setShowMenu(false);\n    props.modifyTreeStatus(event.target.value);\n  }\n\n  useEffect(() => {\n    if (showMenu) {\n      document.addEventListener('mousedown', handleOutsideClick);\n    } else {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, [showMenu, props.options]);\n\n  if (props.options) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: menu,\n      className: \"statusDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Ellipsis, {\n      className: \"statusDropdown-ellipsis\",\n      onClick: toggleShowMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: showMenu ? 'statusDropdown-options is-visible' : 'statusDropdown-options',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, props.options.map((option, index) => /*#__PURE__*/React.createElement(\"button\", {\n      className: \"statusDropdown-options-button\",\n      key: index,\n      value: option.value,\n      onClick: handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, option.label))));\n  }\n}\nStatusDropdown.propTypes = {\n  options: PropTypes.array,\n  modifyTreeStatus: PropTypes.func\n};","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/tree-status-dropdown/statusDropdown.jsx"],"names":["React","useState","useRef","useEffect","PropTypes","StatusDropdown","props","showMenu","setShowMenu","menu","toggleShowMenu","event","preventDefault","handleOutsideClick","current","contains","target","handleSelection","modifyTreeStatus","value","document","addEventListener","removeEventListener","options","map","option","index","label","propTypes","array","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,OAAO,uBAAP;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMQ,IAAI,GAAGP,MAAM,EAAnB;;AAEA,WAASQ,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIL,QAAJ,EAAc;AACVC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;;AAED,WAASK,kBAAT,CAA4BF,KAA5B,EAAmC;AAC/B,QAAI,CAACF,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBJ,KAAK,CAACK,MAA5B,CAAL,EAA0C;AACtCR,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ;;AAED,WAASS,eAAT,CAAyBN,KAAzB,EAAgC;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,KAAK,CAACY,gBAAN,CAAuBP,KAAK,CAACK,MAAN,CAAaG,KAApC;AACH;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,QAAJ,EAAc;AACVa,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACH,KAFD,MAEO;AACHO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACH;;AACD,WAAO,MAAM;AACTO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACH,KAFD;AAGH,GATQ,EASN,CAACN,QAAD,EAAWD,KAAK,CAACiB,OAAjB,CATM,CAAT;;AAWA,MAAIjB,KAAK,CAACiB,OAAV,EAAmB;AACf,wBACI;AAAK,MAAA,GAAG,EAAEd,IAAV;AAAgB,MAAA,SAAS,EAAC,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,yBAApB;AAA8C,MAAA,OAAO,EAAEC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAEH,QAAQ,GAAG,mCAAH,GAAyC,wBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACiB,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,kBACf;AACI,MAAA,SAAS,EAAC,+BADd;AAEI,MAAA,GAAG,EAAEA,KAFT;AAGI,MAAA,KAAK,EAAED,MAAM,CAACN,KAHlB;AAII,MAAA,OAAO,EAAEF,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKQ,MAAM,CAACE,KANZ,CADH,CADL,CAFJ,CADJ;AAiBH;AACJ;AAEDtB,cAAc,CAACuB,SAAf,GAA2B;AACvBL,EAAAA,OAAO,EAAEnB,SAAS,CAACyB,KADI;AAEvBX,EAAAA,gBAAgB,EAAEd,SAAS,CAAC0B;AAFL,CAA3B","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ReactComponent as Ellipsis } from '../../assets/icons/icon-ellipsis.svg';\nimport './statusDropdown.scss';\n\nexport default function StatusDropdown(props) {\n    const [showMenu, setShowMenu] = useState(false);\n    const menu = useRef();\n\n    function toggleShowMenu(event) {\n        event.preventDefault();\n        if (showMenu) {\n            setShowMenu(false);\n        } else {\n            setShowMenu(true);\n        }\n    }\n\n    function handleOutsideClick(event) {\n        if (!menu.current.contains(event.target)) {\n            setShowMenu(false);\n        }\n    }\n\n    function handleSelection(event) {\n        event.preventDefault();\n        setShowMenu(false);\n        props.modifyTreeStatus(event.target.value);\n    }\n\n    useEffect(() => {\n        if (showMenu) {\n            document.addEventListener('mousedown', handleOutsideClick);\n        } else {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        };\n    }, [showMenu, props.options]);\n\n    if (props.options) {\n        return (\n            <div ref={menu} className='statusDropdown'>\n                <Ellipsis className='statusDropdown-ellipsis' onClick={toggleShowMenu} />\n                <div className={showMenu ? 'statusDropdown-options is-visible' : 'statusDropdown-options'}>\n                    {props.options.map((option, index) => (\n                        <button\n                            className='statusDropdown-options-button'\n                            key={index}\n                            value={option.value}\n                            onClick={handleSelection}\n                        >\n                            {option.label}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nStatusDropdown.propTypes = {\n    options: PropTypes.array,\n    modifyTreeStatus: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}