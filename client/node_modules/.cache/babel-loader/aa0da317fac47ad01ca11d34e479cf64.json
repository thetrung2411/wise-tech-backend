{"ast":null,"code":"import _slicedToArray from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import{ReactComponent as Ellipsis}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/icon-ellipsis.svg\";import'./statusDropdown.scss';export default function StatusDropdown(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMenu=_useState2[0],setShowMenu=_useState2[1];var menu=useRef();function toggleShowMenu(event){event.preventDefault();if(showMenu){setShowMenu(false);}else{setShowMenu(true);}}function handleOutsideClick(event){if(!menu.current.contains(event.target)){setShowMenu(false);}}function handleSelection(event){event.preventDefault();setShowMenu(false);props.modifyTreeStatus(event.target.value);}useEffect(function(){if(showMenu){document.addEventListener('mousedown',handleOutsideClick);}else{document.removeEventListener('mousedown',handleOutsideClick);}return function(){document.removeEventListener('mousedown',handleOutsideClick);};},[showMenu,props.options]);if(props.options){return/*#__PURE__*/React.createElement(\"div\",{ref:menu,className:\"statusDropdown\"},/*#__PURE__*/React.createElement(Ellipsis,{className:\"statusDropdown-ellipsis\",onClick:toggleShowMenu}),/*#__PURE__*/React.createElement(\"div\",{className:showMenu?'statusDropdown-options is-visible':'statusDropdown-options'},props.options.map(function(option,index){return/*#__PURE__*/React.createElement(\"button\",{className:\"statusDropdown-options-button\",key:index,value:option.value,onClick:handleSelection},option.label);})));}}","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/tree-status-dropdown/statusDropdown.jsx"],"names":["React","useState","useRef","useEffect","StatusDropdown","props","showMenu","setShowMenu","menu","toggleShowMenu","event","preventDefault","handleOutsideClick","current","contains","target","handleSelection","modifyTreeStatus","value","document","addEventListener","removeEventListener","options","map","option","index","label"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,C,iHAIA,MAAO,uBAAP,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,eACVJ,QAAQ,CAAC,KAAD,CADE,wCACnCK,QADmC,eACzBC,WADyB,eAE1C,GAAMC,CAAAA,IAAI,CAAGN,MAAM,EAAnB,CAEA,QAASO,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC3BA,KAAK,CAACC,cAAN,GACA,GAAIL,QAAJ,CAAc,CACVC,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,IAEO,CACHA,WAAW,CAAC,IAAD,CAAX,CACH,CACJ,CAED,QAASK,CAAAA,kBAAT,CAA4BF,KAA5B,CAAmC,CAC/B,GAAI,CAACF,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBJ,KAAK,CAACK,MAA5B,CAAL,CAA0C,CACtCR,WAAW,CAAC,KAAD,CAAX,CACH,CACJ,CAED,QAASS,CAAAA,eAAT,CAAyBN,KAAzB,CAAgC,CAC5BA,KAAK,CAACC,cAAN,GACAJ,WAAW,CAAC,KAAD,CAAX,CACAF,KAAK,CAACY,gBAAN,CAAuBP,KAAK,CAACK,MAAN,CAAaG,KAApC,EACH,CAEDf,SAAS,CAAC,UAAM,CACZ,GAAIG,QAAJ,CAAc,CACVa,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAuCR,kBAAvC,EACH,CAFD,IAEO,CACHO,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,CAA0CT,kBAA1C,EACH,CACD,MAAO,WAAM,CACTO,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,CAA0CT,kBAA1C,EACH,CAFD,CAGH,CATQ,CASN,CAACN,QAAD,CAAWD,KAAK,CAACiB,OAAjB,CATM,CAAT,CAWA,GAAIjB,KAAK,CAACiB,OAAV,CAAmB,CACf,mBACI,2BAAK,GAAG,CAAEd,IAAV,CAAgB,SAAS,CAAC,gBAA1B,eACI,oBAAC,QAAD,EAAU,SAAS,CAAC,yBAApB,CAA8C,OAAO,CAAEC,cAAvD,EADJ,cAEI,2BAAK,SAAS,CAAEH,QAAQ,CAAG,mCAAH,CAAyC,wBAAjE,EACKD,KAAK,CAACiB,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,CAASC,KAAT,qBACf,8BACI,SAAS,CAAC,+BADd,CAEI,GAAG,CAAEA,KAFT,CAGI,KAAK,CAAED,MAAM,CAACN,KAHlB,CAII,OAAO,CAAEF,eAJb,EAMKQ,MAAM,CAACE,KANZ,CADe,EAAlB,CADL,CAFJ,CADJ,CAiBH,CACJ","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ReactComponent as Ellipsis } from '../../assets/icons/icon-ellipsis.svg';\nimport './statusDropdown.scss';\n\nexport default function StatusDropdown(props) {\n    const [showMenu, setShowMenu] = useState(false);\n    const menu = useRef();\n\n    function toggleShowMenu(event) {\n        event.preventDefault();\n        if (showMenu) {\n            setShowMenu(false);\n        } else {\n            setShowMenu(true);\n        }\n    }\n\n    function handleOutsideClick(event) {\n        if (!menu.current.contains(event.target)) {\n            setShowMenu(false);\n        }\n    }\n\n    function handleSelection(event) {\n        event.preventDefault();\n        setShowMenu(false);\n        props.modifyTreeStatus(event.target.value);\n    }\n\n    useEffect(() => {\n        if (showMenu) {\n            document.addEventListener('mousedown', handleOutsideClick);\n        } else {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        };\n    }, [showMenu, props.options]);\n\n    if (props.options) {\n        return (\n            <div ref={menu} className='statusDropdown'>\n                <Ellipsis className='statusDropdown-ellipsis' onClick={toggleShowMenu} />\n                <div className={showMenu ? 'statusDropdown-options is-visible' : 'statusDropdown-options'}>\n                    {props.options.map((option, index) => (\n                        <button\n                            className='statusDropdown-options-button'\n                            key={index}\n                            value={option.value}\n                            onClick={handleSelection}\n                        >\n                            {option.label}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nStatusDropdown.propTypes = {\n    options: PropTypes.array,\n    modifyTreeStatus: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}