{"ast":null,"code":"var _jsxFileName = \"/Users/thetrung/Downloads/wtg-master@566a617a8c4/src/components/preview-bar/viewNode.layout.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nViewingContent.propTypes = {\n  formData: PropTypes.object,\n  toggleViewingMode: PropTypes.func,\n  resetPreviewBarAndDialogOpen: PropTypes.func\n};\n\nfunction ViewingContent(props) {\n  const {\n    formData\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-fieldsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-verticalContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: formData.entityType ? `previewBar-verticalContainer-rowTopRadius ${formData.entityType}` : 'previewBar-verticalContainer-rowTopRadius tree',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"Reference ID\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, formData.referenceId), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, formData.name), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, formData.description)), formData.tactic ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-verticalContainer-rowBottomRadius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, \"Tactic\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, formData.tactic)) : null), formData.necessity || formData.logic ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-horizontalContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, formData.necessity ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-horizontalContainer-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, \"Necessity\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, formData.necessity)) : null, formData.logic ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-horizontalContainer-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, \"Logic\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, formData.logic)) : null) : null, formData.if || formData.and || formData.then || formData.because ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-verticalContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, formData.if ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"If\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, formData.if)) : null, formData.and ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"and\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, formData.and), ' ') : null, formData.then ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"then\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, formData.then)) : null, formData.because ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"because\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, formData.because)) : null) : null, formData.sufficiency || formData.optionalityAndSequence ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-horizontalContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, formData.sufficiency ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-horizontalContainer-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"Sufficiency\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, formData.sufficiency)) : null, formData.optionalityAndSequence ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-horizontalContainer-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"previewBar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, \"Optionality&Sequence\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"previewBar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, formData.optionalityAndSequence)) : null) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-ctaGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBar-ctaGroup-button previewBar-ctaGroup-button--negative\",\n    onClick: props.resetPreviewBarAndDialogOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Close Preview\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBar-ctaGroup-button previewBar-ctaGroup-button--positive\",\n    onClick: props.toggleViewingMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Edit Node\")));\n}\n\nexport default ViewingContent;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-master@566a617a8c4/src/components/preview-bar/viewNode.layout.jsx"],"names":["React","PropTypes","ViewingContent","propTypes","formData","object","toggleViewingMode","func","resetPreviewBarAndDialogOpen","props","entityType","referenceId","name","description","tactic","necessity","logic","if","and","then","because","sufficiency","optionalityAndSequence"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nViewingContent.propTypes = {\n    formData: PropTypes.object,\n    toggleViewingMode: PropTypes.func,\n    resetPreviewBarAndDialogOpen: PropTypes.func,\n};\n\nfunction ViewingContent(props) {\n    const { formData } = props;\n    return (\n        <div className='previewBar'>\n            <div className='previewBar-fieldsContainer'>\n                <div className='previewBar-verticalContainer'>\n                    <div\n                        className={\n                            formData.entityType\n                                ? `previewBar-verticalContainer-rowTopRadius ${formData.entityType}`\n                                : 'previewBar-verticalContainer-rowTopRadius tree'\n                        }\n                    >\n                        <h4 className='previewBar-label'>Reference ID</h4>\n                        <p className='previewBar-content'>{formData.referenceId}</p>\n                        <h4 className='previewBar-label'>Name</h4>\n                        <p className='previewBar-content'>{formData.name}</p>\n                        <h4 className='previewBar-label'>Description</h4>\n                        <p className='previewBar-content'>{formData.description}</p>\n                    </div>\n\n                    {formData.tactic ? (\n                        <div className='previewBar-verticalContainer-rowBottomRadius'>\n                            <h4 className='previewBar-label'>Tactic</h4>\n                            <p className='previewBar-content'>{formData.tactic}</p>\n                        </div>\n                    ) : null}\n                </div>\n\n                {formData.necessity || formData.logic ? (\n                    <div className='previewBar-horizontalContainer'>\n                        {formData.necessity ? (\n                            <div className='previewBar-horizontalContainer-column'>\n                                <h4 className='previewBar-label'>Necessity</h4>\n                                <p className='previewBar-content'>{formData.necessity}</p>\n                            </div>\n                        ) : null}\n                        {formData.logic ? (\n                            <div className='previewBar-horizontalContainer-column'>\n                                <h4 className='previewBar-label'>Logic</h4>\n                                <p className='previewBar-content'>{formData.logic}</p>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : null}\n\n                {formData.if || formData.and || formData.then || formData.because ? (\n                    <div className='previewBar-verticalContainer'>\n                        {formData.if ? (\n                            <div className='previewBar-inputGroup'>\n                                <h4 className='previewBar-label'>If</h4>\n                                <p className='previewBar-content'>{formData.if}</p>\n                            </div>\n                        ) : null}\n\n                        {formData.and ? (\n                            <div className='previewBar-inputGroup'>\n                                <h4 className='previewBar-label'>and</h4>\n                                <p className='previewBar-content'>{formData.and}</p>{' '}\n                            </div>\n                        ) : null}\n\n                        {formData.then ? (\n                            <div className='previewBar-inputGroup'>\n                                <h4 className='previewBar-label'>then</h4>\n                                <p className='previewBar-content'>{formData.then}</p>\n                            </div>\n                        ) : null}\n\n                        {formData.because ? (\n                            <div className='previewBar-inputGroup'>\n                                <h4 className='previewBar-label'>because</h4>\n                                <p className='previewBar-content'>{formData.because}</p>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : null}\n\n                {formData.sufficiency || formData.optionalityAndSequence ? (\n                    <div className='previewBar-horizontalContainer'>\n                        {formData.sufficiency ? (\n                            <div className='previewBar-horizontalContainer-column'>\n                                <h4 className='previewBar-label'>Sufficiency</h4>\n                                <p className='previewBar-content'>{formData.sufficiency}</p>\n                            </div>\n                        ) : null}\n\n                        {formData.optionalityAndSequence ? (\n                            <div className='previewBar-horizontalContainer-column'>\n                                <h4 className='previewBar-label'>Optionality&amp;Sequence</h4>\n                                <p className='previewBar-content'>{formData.optionalityAndSequence}</p>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : null}\n            </div>\n            <div className='previewBar-ctaGroup'>\n                <button\n                    className='previewBar-ctaGroup-button previewBar-ctaGroup-button--negative'\n                    onClick={props.resetPreviewBarAndDialogOpen}\n                >\n                    Close Preview\n                </button>\n                <button\n                    className='previewBar-ctaGroup-button previewBar-ctaGroup-button--positive'\n                    onClick={props.toggleViewingMode}\n                >\n                    Edit Node\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default ViewingContent;\n"]},"metadata":{},"sourceType":"module"}