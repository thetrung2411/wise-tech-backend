{"ast":null,"code":"var _jsxFileName = \"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/pages/tree-editor/treeEditor.jsx\";\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { select, hierarchy, tree, linkHorizontal, zoom, zoomTransform } from 'd3';\nimport { getNodeById, treeFormatter, getNodeColorByEntityType } from './treeEditorHelper';\nimport { GET_TREE_BY_ID } from '../../services/graphQL/editorApiHelper';\nimport { renderNode, renderLabel, renderPath, renderDescription, renderDescriptionNode, removeDuplicateDOM, renderTactics, renderTacticsNode, transformWhenZoom, expandLabelCoverTactics, hideDescriptionAndTacticsWhenZoom, hideEmptyDescriptionTactics } from './d3Helper';\nimport useResizeObserver from './treeResizeObserver';\nimport { PreviewBar } from '../../components/preview-bar/previewBar';\nimport Menu from '../../components/editor-dropdown-menu/dropdownMenu';\nimport DeleteAlert from '../../components/delete-node-alert/deleteAlert';\nimport ErrorLayout from '../../components/error-layout/errorLayout';\nimport LoadingLayout from '../../components/loading-layout/loadingLayout';\nimport ReturnButton from '../../components/return-button/returnButton';\nimport './treeEditor.scss';\n\nfunction TreeEditor() {\n  const history = useHistory();\n  const treeId = history.location.pathname.substring(6);\n  const {\n    data,\n    error,\n    refetch\n  } = useQuery(GET_TREE_BY_ID, {\n    variables: {\n      id: treeId\n    },\n    pollInterval: 10000\n  }); // Handle D3 Graph Generation & MouseControl Logic\n\n  const [currentZoomState, setCurrentZoomState] = useState({\n    k: 0.5,\n    x: 400,\n    y: 300\n  });\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const zoomBehavior = zoom().scaleExtent([0.1, 1]).on('zoom', handleZoom);\n\n  function handleZoom() {\n    if (isDeleteDialogOpen === false) {\n      const zoomState = zoomTransform(svgRef.current);\n      setCurrentZoomState(zoomState);\n      setIsDialogOpen(false);\n    }\n  } // Handles Node Manipulation Logic\n\n\n  const [toolTip, setToolTip] = useState({\n    show: false,\n    x: 0,\n    y: 0\n  });\n  const [currentPreviewNode, setCurrentPreviewNode] = useState({});\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isPreviewBarOpen, setIsPreviewBarOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [viewMode, updateViewMode] = useState('viewing');\n  const [formattedTree, setFormattedTree] = useState('');\n  const toggleIsDialogOpen = useCallback(() => {\n    if (!isPreviewBarOpen) setIsDialogOpen(!isDialogOpen);\n  }, [isDialogOpen, isPreviewBarOpen]);\n  const toggleIsPreviewBarOpen = useCallback(() => setIsPreviewBarOpen(!isPreviewBarOpen), [isPreviewBarOpen]);\n  const toggleDeleteDialog = useCallback(() => setIsDeleteDialogOpen(!isDeleteDialogOpen), [isDeleteDialogOpen]);\n  const resetPreviewBarAndDialogOpen = useCallback(() => {\n    setIsPreviewBarOpen(false);\n    setIsDialogOpen(false);\n    updateViewMode('viewing');\n  }, []);\n\n  function setPreviewMode(view) {\n    updateViewMode(view);\n  }\n\n  function updateCurrentNode(node) {\n    setCurrentPreviewNode(node);\n  }\n\n  const refetchTree = () => refetch();\n\n  useEffect(() => {\n    function toggleToolTip(x, y) {\n      setToolTip({\n        show: isDialogOpen,\n        x: x,\n        y: y\n      });\n    }\n\n    function triggerMenu(node) {\n      if (!isDeleteDialogOpen) {\n        setCurrentPreviewNode(getNodeById(node.data.id, data.getTreeById));\n        toggleIsDialogOpen();\n        toggleToolTip(node.y + currentZoomState.x + 50, node.x + currentZoomState.y + 200, true);\n      }\n    }\n\n    if (data) {\n      if (!dimensions) return;\n      setFormattedTree(treeFormatter(data.getTreeById));\n      const svg = select(svgRef.current);\n      const root = hierarchy(formattedTree);\n      root.x = currentZoomState.x;\n      root.y = currentZoomState.y;\n      var h = 275;\n      var w = 600;\n\n      if (currentZoomState.k < 0.6) {\n        h = 100;\n        w = 300;\n      }\n\n      const treeLayout = tree().nodeSize([h, w]).separation(function (a, b) {\n        return a.parent === b.parent ? 1 : 1.25;\n      });\n      treeLayout(root);\n\n      if (currentZoomState) {\n        const linkGenerator = linkHorizontal().x(node => node.y + currentZoomState.x + 180).y(node => node.x + currentZoomState.y + 200);\n        renderPath(svg, root, linkGenerator, currentZoomState.k);\n        renderNode(svg, root, node => node.y + currentZoomState.x + 50, node => node.x + currentZoomState.y + 160, node => getNodeColorByEntityType(node.data.entityType), currentZoomState.k);\n        renderDescriptionNode(svg, root, node => node.y + currentZoomState.x + 50, node => node.x + currentZoomState.y + 240, node => getNodeColorByEntityType(node.data.entityType), currentZoomState.k);\n        renderLabel(svg, root, node => node.y + currentZoomState.x + 50, node => node.x + currentZoomState.y + 160, currentZoomState.k, node => {\n          return `[${node.data.referenceId}] ${node.data.name}`;\n        }, node => getNodeColorByEntityType(node.data.entityType)).on('click', node => {\n          triggerMenu(node);\n        });\n        renderDescription(svg, root, node => node.y + currentZoomState.x + 50, node => node.x + currentZoomState.y + 240, currentZoomState.k, node => node.data.description).on('click', node => {\n          triggerMenu(node);\n        });\n        renderTacticsNode(svg, root, node => node.y + currentZoomState.x + 230, node => node.x + currentZoomState.y + 240, currentZoomState.k, node => node.data.tactic);\n        renderTactics(svg, root, node => node.y + currentZoomState.x + 230, node => node.x + currentZoomState.y + 240, currentZoomState.k, node => node.data.tactic).on('click', node => {\n          triggerMenu(node);\n        });\n\n        if (currentZoomState.k < 0.6) {\n          hideDescriptionAndTacticsWhenZoom(svg);\n        }\n\n        svg.selectAll('.dropdownHolder').raise();\n        svg.selectAll('.deleteDialogHolder').raise();\n      }\n\n      removeDuplicateDOM();\n      expandLabelCoverTactics('tacticsText', 'node');\n      expandLabelCoverTactics('tacticsText', 'label');\n      hideEmptyDescriptionTactics();\n      svg.call(zoomBehavior);\n      transformWhenZoom(svg, currentZoomState);\n    }\n  }, [currentZoomState, dimensions, zoomBehavior, currentPreviewNode, toggleIsDialogOpen, formattedTree, isDeleteDialogOpen, data, isDialogOpen]);\n\n  if (data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: wrapperRef,\n      className: \"treeEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReturnButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"dialog\", {\n      open: isPreviewBarOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, currentPreviewNode.id ? /*#__PURE__*/React.createElement(PreviewBar, {\n      rootNodeId: formattedTree.id,\n      nodeData: currentPreviewNode,\n      refreshView: refetchTree,\n      handleNodeAttributesUpdate: updateCurrentNode,\n      closeForm: toggleIsPreviewBarOpen,\n      chooseMode: viewMode,\n      closePreview: resetPreviewBarAndDialogOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"svg\", {\n      ref: svgRef,\n      className: \"treeEditor-canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"foreignObject\", {\n      width: \"200\",\n      height: \"122\",\n      x: toolTip.x + 50,\n      y: toolTip.y,\n      className: \"dropdownHolder\",\n      transform: `translate(${currentZoomState.x}, ${currentZoomState.y}) scale(${currentZoomState.k})`,\n      style: {\n        visibility: isDialogOpen ? 'visible' : 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      togglePreviewBar: toggleIsPreviewBarOpen,\n      closeForm: toggleIsDialogOpen,\n      togglePreviewMode: setPreviewMode,\n      toggleDeleteDialog: toggleDeleteDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"foreignObject\", {\n      width: \"300\",\n      height: \"125\",\n      className: \"deleteDialogHolder\",\n      x: toolTip.x,\n      y: toolTip.y,\n      transform: `translate(${currentZoomState.x}, ${currentZoomState.y})scale(${currentZoomState.k})`,\n      style: {\n        visibility: isDeleteDialogOpen ? 'visible' : 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DeleteAlert, {\n      nodeData: currentPreviewNode,\n      toggleDeleteDialog: toggleDeleteDialog,\n      refreshView: refetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }))));\n  } else if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: wrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ErrorLayout, {\n      isStandAlonePage: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: wrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LoadingLayout, {\n      isStandAlonePage: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }));\n  }\n}\n\nexport default TreeEditor;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/pages/tree-editor/treeEditor.jsx"],"names":["React","useState","useRef","useEffect","useCallback","useHistory","useQuery","select","hierarchy","tree","linkHorizontal","zoom","zoomTransform","getNodeById","treeFormatter","getNodeColorByEntityType","GET_TREE_BY_ID","renderNode","renderLabel","renderPath","renderDescription","renderDescriptionNode","removeDuplicateDOM","renderTactics","renderTacticsNode","transformWhenZoom","expandLabelCoverTactics","hideDescriptionAndTacticsWhenZoom","hideEmptyDescriptionTactics","useResizeObserver","PreviewBar","Menu","DeleteAlert","ErrorLayout","LoadingLayout","ReturnButton","TreeEditor","history","treeId","location","pathname","substring","data","error","refetch","variables","id","pollInterval","currentZoomState","setCurrentZoomState","k","x","y","svgRef","wrapperRef","dimensions","zoomBehavior","scaleExtent","on","handleZoom","isDeleteDialogOpen","zoomState","current","setIsDialogOpen","toolTip","setToolTip","show","currentPreviewNode","setCurrentPreviewNode","isDialogOpen","isPreviewBarOpen","setIsPreviewBarOpen","setIsDeleteDialogOpen","viewMode","updateViewMode","formattedTree","setFormattedTree","toggleIsDialogOpen","toggleIsPreviewBarOpen","toggleDeleteDialog","resetPreviewBarAndDialogOpen","setPreviewMode","view","updateCurrentNode","node","refetchTree","toggleToolTip","triggerMenu","getTreeById","svg","root","h","w","treeLayout","nodeSize","separation","a","b","parent","linkGenerator","entityType","referenceId","name","description","tactic","selectAll","raise","call","visibility"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { select, hierarchy, tree, linkHorizontal, zoom, zoomTransform } from 'd3';\nimport { getNodeById, treeFormatter, getNodeColorByEntityType } from './treeEditorHelper';\nimport { GET_TREE_BY_ID } from '../../services/graphQL/editorApiHelper';\nimport {\n    renderNode,\n    renderLabel,\n    renderPath,\n    renderDescription,\n    renderDescriptionNode,\n    removeDuplicateDOM,\n    renderTactics,\n    renderTacticsNode,\n    transformWhenZoom,\n    expandLabelCoverTactics,\n    hideDescriptionAndTacticsWhenZoom,\n    hideEmptyDescriptionTactics,\n} from './d3Helper';\nimport useResizeObserver from './treeResizeObserver';\nimport { PreviewBar } from '../../components/preview-bar/previewBar';\nimport Menu from '../../components/editor-dropdown-menu/dropdownMenu';\nimport DeleteAlert from '../../components/delete-node-alert/deleteAlert';\nimport ErrorLayout from '../../components/error-layout/errorLayout';\nimport LoadingLayout from '../../components/loading-layout/loadingLayout';\nimport ReturnButton from '../../components/return-button/returnButton';\nimport './treeEditor.scss';\n\nfunction TreeEditor() {\n    const history = useHistory();\n    const treeId = history.location.pathname.substring(6);\n    const { data, error, refetch } = useQuery(GET_TREE_BY_ID, {\n        variables: {\n            id: treeId,\n        },\n        pollInterval: 10000,\n    });\n\n    // Handle D3 Graph Generation & MouseControl Logic\n    const [currentZoomState, setCurrentZoomState] = useState({\n        k: 0.5,\n        x: 400,\n        y: 300,\n    });\n    const svgRef = useRef();\n    const wrapperRef = useRef();\n    const dimensions = useResizeObserver(wrapperRef);\n    const zoomBehavior = zoom().scaleExtent([0.1, 1]).on('zoom', handleZoom);\n\n    function handleZoom() {\n        if (isDeleteDialogOpen === false) {\n            const zoomState = zoomTransform(svgRef.current);\n            setCurrentZoomState(zoomState);\n            setIsDialogOpen(false);\n        }\n    }\n    // Handles Node Manipulation Logic\n    const [toolTip, setToolTip] = useState({ show: false, x: 0, y: 0 });\n    const [currentPreviewNode, setCurrentPreviewNode] = useState({});\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n    const [isPreviewBarOpen, setIsPreviewBarOpen] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [viewMode, updateViewMode] = useState('viewing');\n    const [formattedTree, setFormattedTree] = useState('');\n    const toggleIsDialogOpen = useCallback(() => {\n        if (!isPreviewBarOpen) setIsDialogOpen(!isDialogOpen);\n    }, [isDialogOpen, isPreviewBarOpen]);\n    const toggleIsPreviewBarOpen = useCallback(() => setIsPreviewBarOpen(!isPreviewBarOpen), [isPreviewBarOpen]);\n    const toggleDeleteDialog = useCallback(() => setIsDeleteDialogOpen(!isDeleteDialogOpen), [isDeleteDialogOpen]);\n    const resetPreviewBarAndDialogOpen = useCallback(() => {\n        setIsPreviewBarOpen(false);\n        setIsDialogOpen(false);\n        updateViewMode('viewing');\n    }, []);\n\n    function setPreviewMode(view) {\n        updateViewMode(view);\n    }\n    function updateCurrentNode(node) {\n        setCurrentPreviewNode(node);\n    }\n\n    const refetchTree = () => refetch();\n\n    useEffect(() => {\n        function toggleToolTip(x, y) {\n            setToolTip({ show: isDialogOpen, x: x, y: y });\n        }\n\n        function triggerMenu(node) {\n            if (!isDeleteDialogOpen) {\n                setCurrentPreviewNode(getNodeById(node.data.id, data.getTreeById));\n                toggleIsDialogOpen();\n                toggleToolTip(node.y + currentZoomState.x + 50, node.x + currentZoomState.y + 200, true);\n            }\n        }\n        if (data) {\n            if (!dimensions) return;\n            setFormattedTree(treeFormatter(data.getTreeById));\n            const svg = select(svgRef.current);\n            const root = hierarchy(formattedTree);\n            root.x = currentZoomState.x;\n            root.y = currentZoomState.y;\n            var h = 275;\n            var w = 600;\n            if (currentZoomState.k < 0.6) {\n                h = 100;\n                w = 300;\n            }\n            const treeLayout = tree()\n                .nodeSize([h, w])\n                .separation(function (a, b) {\n                    return a.parent === b.parent ? 1 : 1.25;\n                });\n            treeLayout(root);\n\n            if (currentZoomState) {\n                const linkGenerator = linkHorizontal()\n                    .x(node => node.y + currentZoomState.x + 180)\n                    .y(node => node.x + currentZoomState.y + 200);\n                renderPath(svg, root, linkGenerator, currentZoomState.k);\n                renderNode(\n                    svg,\n                    root,\n                    node => node.y + currentZoomState.x + 50,\n                    node => node.x + currentZoomState.y + 160,\n                    node => getNodeColorByEntityType(node.data.entityType),\n                    currentZoomState.k\n                );\n\n                renderDescriptionNode(\n                    svg,\n                    root,\n                    node => node.y + currentZoomState.x + 50,\n                    node => node.x + currentZoomState.y + 240,\n                    node => getNodeColorByEntityType(node.data.entityType),\n                    currentZoomState.k\n                );\n\n                renderLabel(\n                    svg,\n                    root,\n                    node => node.y + currentZoomState.x + 50,\n                    node => node.x + currentZoomState.y + 160,\n                    currentZoomState.k,\n                    node => {\n                        return `[${node.data.referenceId}] ${node.data.name}`;\n                    },\n                    node => getNodeColorByEntityType(node.data.entityType)\n                ).on('click', node => {\n                    triggerMenu(node);\n                });\n\n                renderDescription(\n                    svg,\n                    root,\n                    node => node.y + currentZoomState.x + 50,\n                    node => node.x + currentZoomState.y + 240,\n                    currentZoomState.k,\n                    node => node.data.description\n                ).on('click', node => {\n                    triggerMenu(node);\n                });\n                renderTacticsNode(\n                    svg,\n                    root,\n                    node => node.y + currentZoomState.x + 230,\n                    node => node.x + currentZoomState.y + 240,\n                    currentZoomState.k,\n                    node => node.data.tactic\n                );\n                renderTactics(\n                    svg,\n                    root,\n                    node => node.y + currentZoomState.x + 230,\n                    node => node.x + currentZoomState.y + 240,\n                    currentZoomState.k,\n                    node => node.data.tactic\n                ).on('click', node => {\n                    triggerMenu(node);\n                });\n                if (currentZoomState.k < 0.6) {\n                    hideDescriptionAndTacticsWhenZoom(svg);\n                }\n                svg.selectAll('.dropdownHolder').raise();\n                svg.selectAll('.deleteDialogHolder').raise();\n            }\n            removeDuplicateDOM();\n            expandLabelCoverTactics('tacticsText', 'node');\n            expandLabelCoverTactics('tacticsText', 'label');\n            hideEmptyDescriptionTactics();\n            svg.call(zoomBehavior);\n            transformWhenZoom(svg, currentZoomState);\n        }\n    }, [\n        currentZoomState,\n        dimensions,\n        zoomBehavior,\n        currentPreviewNode,\n        toggleIsDialogOpen,\n        formattedTree,\n        isDeleteDialogOpen,\n        data,\n        isDialogOpen,\n    ]);\n    if (data) {\n        return (\n            <div ref={wrapperRef} className='treeEditor'>\n                <ReturnButton />\n                <dialog open={isPreviewBarOpen}>\n                    {currentPreviewNode.id ? (\n                        <PreviewBar\n                            rootNodeId={formattedTree.id}\n                            nodeData={currentPreviewNode}\n                            refreshView={refetchTree}\n                            handleNodeAttributesUpdate={updateCurrentNode}\n                            closeForm={toggleIsPreviewBarOpen}\n                            chooseMode={viewMode}\n                            closePreview={resetPreviewBarAndDialogOpen}\n                        />\n                    ) : null}\n                </dialog>\n                <svg ref={svgRef} className='treeEditor-canvas'>\n                    <foreignObject\n                        width='200'\n                        height='122'\n                        x={toolTip.x + 50}\n                        y={toolTip.y}\n                        className='dropdownHolder'\n                        transform={`translate(${currentZoomState.x}, ${currentZoomState.y}) scale(${currentZoomState.k})`}\n                        style={{ visibility: isDialogOpen ? 'visible' : 'hidden' }}\n                    >\n                        <Menu\n                            togglePreviewBar={toggleIsPreviewBarOpen}\n                            closeForm={toggleIsDialogOpen}\n                            togglePreviewMode={setPreviewMode}\n                            toggleDeleteDialog={toggleDeleteDialog}\n                        />\n                    </foreignObject>\n                    <foreignObject\n                        width='300'\n                        height='125'\n                        className='deleteDialogHolder'\n                        x={toolTip.x}\n                        y={toolTip.y}\n                        transform={`translate(${currentZoomState.x}, ${currentZoomState.y})scale(${currentZoomState.k})`}\n                        style={{ visibility: isDeleteDialogOpen ? 'visible' : 'hidden' }}\n                    >\n                        <DeleteAlert\n                            nodeData={currentPreviewNode}\n                            toggleDeleteDialog={toggleDeleteDialog}\n                            refreshView={refetch}\n                        />\n                    </foreignObject>\n                </svg>\n            </div>\n        );\n    } else if (error) {\n        return (\n            <div ref={wrapperRef}>\n                <ErrorLayout isStandAlonePage={true} />\n            </div>\n        );\n    } else {\n        return (\n            <div ref={wrapperRef}>\n                <LoadingLayout isStandAlonePage={true} />\n            </div>\n        );\n    }\n}\n\nexport default TreeEditor;\n"]},"metadata":{},"sourceType":"module"}