{"ast":null,"code":"import _slicedToArray from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';var useResizeObserver=function useResizeObserver(ref){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dimensions=_useState2[0],setDimensions=_useState2[1];useEffect(function(){var observeTarget=ref.current;var resizeObserver=new ResizeObserver(function(entries){entries.forEach(function(entry){setDimensions(entry.contentRect);});});resizeObserver.observe(observeTarget);return function(){resizeObserver.unobserve(observeTarget);};},[ref]);return dimensions;};export default useResizeObserver;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/pages/tree-editor/treeResizeObserver.jsx"],"names":["useEffect","useState","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve"],"mappings":"wLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,GAAG,CAAI,eACOF,QAAQ,CAAC,IAAD,CADf,wCACtBG,UADsB,eACVC,aADU,eAE7BL,SAAS,CAAC,UAAM,CACZ,GAAMM,CAAAA,aAAa,CAAGH,GAAG,CAACI,OAA1B,CACA,GAAMC,CAAAA,cAAc,CAAG,GAAIC,CAAAA,cAAJ,CAAmB,SAAAC,OAAO,CAAI,CACjDA,OAAO,CAACC,OAAR,CAAgB,SAAAC,KAAK,CAAI,CACrBP,aAAa,CAACO,KAAK,CAACC,WAAP,CAAb,CACH,CAFD,EAGH,CAJsB,CAAvB,CAKAL,cAAc,CAACM,OAAf,CAAuBR,aAAvB,EACA,MAAO,WAAM,CACTE,cAAc,CAACO,SAAf,CAAyBT,aAAzB,EACH,CAFD,CAGH,CAXQ,CAWN,CAACH,GAAD,CAXM,CAAT,CAYA,MAAOC,CAAAA,UAAP,CACH,CAfD,CAiBA,cAAeF,CAAAA,iBAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useResizeObserver = ref => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n        const observeTarget = ref.current;\n        const resizeObserver = new ResizeObserver(entries => {\n            entries.forEach(entry => {\n                setDimensions(entry.contentRect);\n            });\n        });\n        resizeObserver.observe(observeTarget);\n        return () => {\n            resizeObserver.unobserve(observeTarget);\n        };\n    }, [ref]);\n    return dimensions;\n};\n\nexport default useResizeObserver;\n"]},"metadata":{},"sourceType":"module"}