{"ast":null,"code":"import _defineProperty from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef}from'react';import{useState,useEffect}from'react';import{useMutation}from'@apollo/react-hooks';import cogoToast from'cogo-toast';import{CREATE_CHILD_NODE}from'../../services/graphQL/editorApiHelper';function CreatingContent(props){// Define defaults for all form fields so they can be reset on form submission or cancellation\nvar defaultState={and:'',because:'',description:'',entityType:'lever',if:'',logic:'',name:'New Node',necessity:'',optionalityAndSequence:'',referenceId:'Ref ID',sufficiency:'',tactic:'',then:''};var _useState=useState(defaultState),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useMutation=useMutation(CREATE_CHILD_NODE),_useMutation2=_slicedToArray(_useMutation,1),createNewChildNode=_useMutation2[0];var formRef=useRef();function handleFormChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormData(function(formData){return _objectSpread({},formData,_defineProperty({},name,value));});}function createNewData(event){event.preventDefault();createNewChildNode({variables:{and:formData.and,because:formData.because,description:formData.description,entityType:formData.entityType,if:formData.if,logic:formData.logic,name:formData.necessity,necessity:formData.name,optionalityAndSequence:formData.optionalityAndSequence,parentId:props.parentId,referenceId:formData.referenceId,sufficiency:formData.sufficiency,tactic:formData.tactic,then:formData.then}}).then(function(res){cogoToast.success('Created new node');formRef.current.scrollTop=0;props.createNewNode(res.data.createChildNode);props.closeForm();setFormData(defaultState);}).catch(function(err){return cogoToast.error(err);});}function handleCloseFormClick(event){event.preventDefault();props.closeForm();formRef.current.scrollTop=0;setFormData(defaultState);}useEffect(function(){},[formData]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:createNewData,onChange:handleFormChange},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",style:{display:'none'}}),/*#__PURE__*/React.createElement(\"div\",{ref:formRef,className:\"previewBar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Reference ID\"),/*#__PURE__*/React.createElement(\"input\",{className:\"previewBar-inputGroup-input\",name:\"referenceId\",value:formData.referenceId})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Entity Type\"),/*#__PURE__*/React.createElement(\"select\",{name:\"entityType\",value:formData.entityType,className:\"previewBar-inputGroup-dropdown\"},props.isParentRootNode?/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"horizon\"},\"Horizon\"):null,/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"lever\"},\"Lever\"),/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"injection\"},\"Injection\"),/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"strategy\"},\"Strategy\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{className:\"previewBar-inputGroup-input\",name:\"name\",value:formData.name})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Description\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"description\",value:formData.description})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Tactic\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"tactic\",value:formData.tactic})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Necessity\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"necessity\",value:formData.necessity})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Logic\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"logic\",value:formData.logic})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"If\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",value:formData.if,placeholder:formData.necessity!==''?'[If] is recommended if you have [Necessity]':'',name:\"if\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"and\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",value:formData.and,placeholder:formData.tactic!==''?'[And] is recommended if you have [Tactic]':'',name:\"and\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"then\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",value:formData.then,placeholder:formData.description!==''?'[Then] is recommended if you have [Description]':'',name:\"then\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"because\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",value:formData.because,placeholder:formData.logic!==''?'[Because] is recommended if you have [Logic]':'',name:\"because\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Sufficiency\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",value:formData.sufficiency,name:\"sufficiency\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Optionality & Sequence\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",value:formData.optionalityAndSequence,name:\"optionalityAndSequence\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-ctaGroup\"},/*#__PURE__*/React.createElement(\"button\",{className:\"previewBar-ctaGroup-button previewBar-ctaGroup-button--negative\",onClick:handleCloseFormClick},\"Cancel\"),/*#__PURE__*/React.createElement(\"button\",{className:\"previewBar-ctaGroup-button previewBar-ctaGroup-button--positive\",type:\"submit\"},\"Create Node\"))));}export default CreatingContent;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/preview-bar/createNode.layout.jsx"],"names":["React","useRef","useState","useEffect","useMutation","cogoToast","CREATE_CHILD_NODE","CreatingContent","props","defaultState","and","because","description","entityType","if","logic","name","necessity","optionalityAndSequence","referenceId","sufficiency","tactic","then","formData","setFormData","createNewChildNode","formRef","handleFormChange","event","target","value","createNewData","preventDefault","variables","parentId","res","success","current","scrollTop","createNewNode","data","createChildNode","closeForm","catch","err","error","handleCloseFormClick","display","isParentRootNode"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport cogoToast from 'cogo-toast';\nimport { CREATE_CHILD_NODE } from '../../services/graphQL/editorApiHelper';\n\nCreatingContent.propTypes = {\n    createNewNode: PropTypes.func.isRequired,\n    closeForm: PropTypes.func.isRequired,\n    isParentRootNode: PropTypes.bool.isRequired,\n    parentId: PropTypes.string.isRequired,\n};\n\nfunction CreatingContent(props) {\n    // Define defaults for all form fields so they can be reset on form submission or cancellation\n    const defaultState = {\n        and: '',\n        because: '',\n        description: '',\n        entityType: 'lever',\n        if: '',\n        logic: '',\n        name: 'New Node',\n        necessity: '',\n        optionalityAndSequence: '',\n        referenceId: 'Ref ID',\n        sufficiency: '',\n        tactic: '',\n        then: '',\n    };\n    const [formData, setFormData] = useState(defaultState);\n    const [createNewChildNode] = useMutation(CREATE_CHILD_NODE);\n    const formRef = useRef();\n\n    function handleFormChange(event) {\n        const { name, value } = event.target;\n        setFormData(formData => ({\n            ...formData,\n            [name]: value,\n        }));\n    }\n\n    function createNewData(event) {\n        event.preventDefault();\n        createNewChildNode({\n            variables: {\n                and: formData.and,\n                because: formData.because,\n                description: formData.description,\n                entityType: formData.entityType,\n                if: formData.if,\n                logic: formData.logic,\n                name: formData.necessity,\n                necessity: formData.name,\n                optionalityAndSequence: formData.optionalityAndSequence,\n                parentId: props.parentId,\n                referenceId: formData.referenceId,\n                sufficiency: formData.sufficiency,\n                tactic: formData.tactic,\n                then: formData.then,\n            },\n        })\n            .then(res => {\n                cogoToast.success('Created new node');\n                formRef.current.scrollTop = 0;\n                props.createNewNode(res.data.createChildNode);\n                props.closeForm();\n                setFormData(defaultState);\n            })\n            .catch(err => cogoToast.error(err));\n    }\n\n    function handleCloseFormClick(event) {\n        event.preventDefault();\n        props.closeForm();\n        formRef.current.scrollTop = 0;\n        setFormData(defaultState);\n    }\n\n    useEffect(() => {}, [formData]);\n\n    return (\n        <div>\n            <form onSubmit={createNewData} onChange={handleFormChange}>\n                <input type='submit' style={{ display: 'none' }} />\n                <div ref={formRef} className='previewBar'>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Reference ID</label>\n                        <input\n                            className='previewBar-inputGroup-input'\n                            name='referenceId'\n                            value={formData.referenceId}\n                        ></input>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Entity Type</label>\n                        <select\n                            name='entityType'\n                            value={formData.entityType}\n                            className='previewBar-inputGroup-dropdown'\n                        >\n                            {props.isParentRootNode ? (\n                                <option className='previewBar-inputGroup-dropdown-item' value='horizon'>\n                                    Horizon\n                                </option>\n                            ) : null}\n                            <option className='previewBar-inputGroup-dropdown-item' value='lever'>\n                                Lever\n                            </option>\n                            <option className='previewBar-inputGroup-dropdown-item' value='injection'>\n                                Injection\n                            </option>\n                            <option className='previewBar-inputGroup-dropdown-item' value='strategy'>\n                                Strategy\n                            </option>\n                        </select>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Name</label>\n                        <input className='previewBar-inputGroup-input' name='name' value={formData.name}></input>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Description</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='description'\n                            value={formData.description}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Tactic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='tactic'\n                            value={formData.tactic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Necessity</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='necessity'\n                            value={formData.necessity}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Logic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='logic'\n                            value={formData.logic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>If</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.if}\n                            placeholder={formData.necessity !== '' ? '[If] is recommended if you have [Necessity]' : ''}\n                            name='if'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>and</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.and}\n                            placeholder={formData.tactic !== '' ? '[And] is recommended if you have [Tactic]' : ''}\n                            name='and'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>then</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.then}\n                            placeholder={\n                                formData.description !== '' ? '[Then] is recommended if you have [Description]' : ''\n                            }\n                            name='then'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>because</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.because}\n                            placeholder={formData.logic !== '' ? '[Because] is recommended if you have [Logic]' : ''}\n                            name='because'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Sufficiency</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.sufficiency}\n                            name='sufficiency'\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Optionality &amp; Sequence</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            value={formData.optionalityAndSequence}\n                            name='optionalityAndSequence'\n                        ></textarea>\n                    </div>\n                </div>\n                <div className='previewBar-ctaGroup'>\n                    <button\n                        className='previewBar-ctaGroup-button previewBar-ctaGroup-button--negative'\n                        onClick={handleCloseFormClick}\n                    >\n                        Cancel\n                    </button>\n                    <button className='previewBar-ctaGroup-button previewBar-ctaGroup-button--positive' type='submit'>\n                        Create Node\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatingContent;\n"]},"metadata":{},"sourceType":"module"}