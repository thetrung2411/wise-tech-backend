{"ast":null,"code":"import _defineProperty from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect}from'react';import{useMutation}from'@apollo/react-hooks';import cogoToast from'cogo-toast';import{SET_NODE_ATTRIBUTES}from'../../services/graphQL/editorApiHelper';function EditingContent(props){var _useState=useState(props.formData),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useMutation=useMutation(SET_NODE_ATTRIBUTES),_useMutation2=_slicedToArray(_useMutation,1),mutateNodeAttributes=_useMutation2[0];function handleFormChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormData(function(formData){return _objectSpread({},formData,_defineProperty({},name,value));});}function updateCurrentNode(event){event.preventDefault();mutateNodeAttributes({variables:{id:formData.id,and:formData.and,because:formData.because,description:formData.description,entityType:formData.entityType,if:formData.if,logic:formData.logic,name:formData.name,necessity:formData.necessity,optionalityAndSequence:formData.optionalityAndSequence,parentId:formData.parentId,referenceId:formData.referenceId,sufficiency:formData.sufficiency,tactic:formData.tactic,then:formData.then}}).then(function(res){setFormData(res.data.updateNodeAttributes);cogoToast.success(\"Updated node \".concat(formData.referenceId));props.updateCurrentNode(formData);props.toggleViewingMode();}).catch(function(){return cogoToast.error(\"Failed to update node \".concat(formData.referenceId));});}useEffect(function(){},[formData]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:updateCurrentNode,onChange:handleFormChange},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",style:{display:'none'}}),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Reference ID\"),/*#__PURE__*/React.createElement(\"input\",{className:\"previewBar-inputGroup-input\",name:\"referenceId\",value:formData.referenceId})),!formData.isRoot?/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Entity Type\"),/*#__PURE__*/React.createElement(\"select\",{name:\"entityType\",value:formData.entityType?formData.entityType:'',className:\"previewBar-inputGroup-dropdown\"},props.isParentRootNode?/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"horizon\"},\"Horizon\"):null,/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"lever\"},\"Lever\"),/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"injection\"},\"Injection\"),/*#__PURE__*/React.createElement(\"option\",{className:\"previewBar-inputGroup-dropdown-item\",value:\"strategy\"},\"Strategy\"))):null,/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{className:\"previewBar-inputGroup-input\",name:\"name\",value:formData.name})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Description\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"description\",value:formData.description})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Tactic\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"tactic\",value:formData.tactic})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Necessity\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"necessity\",value:formData.necessity})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Logic\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"logic\",value:formData.logic})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"If\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"if\",value:formData.if,placeholder:formData.necessity!==''?'[If] is recommended if you have [Necessity]':''})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"and\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"and\",value:formData.and,placeholder:formData.tactic!==''?'[And] is recommended if you have [Tactic]':''})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"then\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"then\",value:formData.then,placeholder:formData.description!==''?'[Then] is recommended if you have [Description]':''})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"because\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"because\",value:formData.because,placeholder:formData.logic!==''?'[Because] is recommended if you have [Logic]':''})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Sufficiency\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"sufficiency\",value:formData.sufficiency})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"previewBar-inputGroup-label\"},\"Optionality & Sequence\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"previewBar-inputGroup-textarea\",name:\"optionalityAndSequence\",value:formData.optionalityAndSequence})),/*#__PURE__*/React.createElement(\"div\",{className:\"previewBar-ctaGroup\"},/*#__PURE__*/React.createElement(\"button\",{className:\"previewBar-ctaGroup-button previewBar-ctaGroup-button--negative\",onClick:props.toggleViewingMode},\"Cancel Changes\"),/*#__PURE__*/React.createElement(\"button\",{className:\"previewBar-ctaGroup-button previewBar-ctaGroup-button--positive\",type:\"submit\"},\"Save Changes\")))));}export default EditingContent;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/preview-bar/editNode.layout.jsx"],"names":["React","useState","useEffect","useMutation","cogoToast","SET_NODE_ATTRIBUTES","EditingContent","props","formData","setFormData","mutateNodeAttributes","handleFormChange","event","target","name","value","updateCurrentNode","preventDefault","variables","id","and","because","description","entityType","if","logic","necessity","optionalityAndSequence","parentId","referenceId","sufficiency","tactic","then","res","data","updateNodeAttributes","success","toggleViewingMode","catch","error","display","isRoot","isParentRootNode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport cogoToast from 'cogo-toast';\nimport { SET_NODE_ATTRIBUTES } from '../../services/graphQL/editorApiHelper';\n\nEditingContent.propTypes = {\n    formData: PropTypes.object.isRequired,\n    toggleViewingMode: PropTypes.func.isRequired,\n    updateCurrentNode: PropTypes.func.isRequired,\n    isParentRootNode: PropTypes.bool.isRequired,\n};\n\nfunction EditingContent(props) {\n    const [formData, setFormData] = useState(props.formData);\n    const [mutateNodeAttributes] = useMutation(SET_NODE_ATTRIBUTES);\n\n    function handleFormChange(event) {\n        const { name, value } = event.target;\n        setFormData(formData => ({\n            ...formData,\n            [name]: value,\n        }));\n    }\n\n    function updateCurrentNode(event) {\n        event.preventDefault();\n        mutateNodeAttributes({\n            variables: {\n                id: formData.id,\n                and: formData.and,\n                because: formData.because,\n                description: formData.description,\n                entityType: formData.entityType,\n                if: formData.if,\n                logic: formData.logic,\n                name: formData.name,\n                necessity: formData.necessity,\n                optionalityAndSequence: formData.optionalityAndSequence,\n                parentId: formData.parentId,\n                referenceId: formData.referenceId,\n                sufficiency: formData.sufficiency,\n                tactic: formData.tactic,\n                then: formData.then,\n            },\n        })\n            .then(res => {\n                setFormData(res.data.updateNodeAttributes);\n                cogoToast.success(`Updated node ${formData.referenceId}`);\n                props.updateCurrentNode(formData);\n                props.toggleViewingMode();\n            })\n            .catch(() => cogoToast.error(`Failed to update node ${formData.referenceId}`));\n    }\n\n    useEffect(() => {}, [formData]);\n\n    return (\n        <div>\n            <form onSubmit={updateCurrentNode} onChange={handleFormChange}>\n                <input type='submit' style={{ display: 'none' }} />\n                <div className='previewBar'>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Reference ID</label>\n                        <input\n                            className='previewBar-inputGroup-input'\n                            name='referenceId'\n                            value={formData.referenceId}\n                        ></input>\n                    </div>\n                    {!formData.isRoot ? (\n                        <div className='previewBar-inputGroup'>\n                            <label className='previewBar-inputGroup-label'>Entity Type</label>\n                            <select\n                                name='entityType'\n                                value={formData.entityType ? formData.entityType : ''}\n                                className='previewBar-inputGroup-dropdown'\n                            >\n                                {props.isParentRootNode ? (\n                                    <option className='previewBar-inputGroup-dropdown-item' value='horizon'>\n                                        Horizon\n                                    </option>\n                                ) : null}\n                                <option className='previewBar-inputGroup-dropdown-item' value='lever'>\n                                    Lever\n                                </option>\n                                <option className='previewBar-inputGroup-dropdown-item' value='injection'>\n                                    Injection\n                                </option>\n                                <option className='previewBar-inputGroup-dropdown-item' value='strategy'>\n                                    Strategy\n                                </option>\n                            </select>\n                        </div>\n                    ) : null}\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Name</label>\n                        <input className='previewBar-inputGroup-input' name='name' value={formData.name}></input>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Description</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='description'\n                            value={formData.description}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Tactic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='tactic'\n                            value={formData.tactic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Necessity</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='necessity'\n                            value={formData.necessity}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Logic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='logic'\n                            value={formData.logic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>If</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='if'\n                            value={formData.if}\n                            placeholder={formData.necessity !== '' ? '[If] is recommended if you have [Necessity]' : ''}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>and</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='and'\n                            value={formData.and}\n                            placeholder={formData.tactic !== '' ? '[And] is recommended if you have [Tactic]' : ''}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>then</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='then'\n                            value={formData.then}\n                            placeholder={\n                                formData.description !== '' ? '[Then] is recommended if you have [Description]' : ''\n                            }\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>because</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='because'\n                            value={formData.because}\n                            placeholder={formData.logic !== '' ? '[Because] is recommended if you have [Logic]' : ''}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Sufficiency</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='sufficiency'\n                            value={formData.sufficiency}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Optionality &amp; Sequence</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='optionalityAndSequence'\n                            value={formData.optionalityAndSequence}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-ctaGroup'>\n                        <button\n                            className='previewBar-ctaGroup-button previewBar-ctaGroup-button--negative'\n                            onClick={props.toggleViewingMode}\n                        >\n                            Cancel Changes\n                        </button>\n                        <button\n                            className='previewBar-ctaGroup-button previewBar-ctaGroup-button--positive'\n                            type='submit'\n                        >\n                            Save Changes\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default EditingContent;\n"]},"metadata":{},"sourceType":"module"}