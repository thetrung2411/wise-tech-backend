{"ast":null,"code":"export function getNodeById(nodeId, unformattedTreeArray) {\n  return unformattedTreeArray.find(node => node.id === nodeId);\n}\nexport function treeFormatter(data) {\n  let tree = {};\n  let roots = [];\n  let node;\n  let i;\n\n  for (i = 0; i < data.length; i++) {\n    tree[data[i].id] = i;\n    data[i].children = [];\n  }\n\n  for (i = 0; i < data.length; i++) {\n    node = data[i];\n\n    if (node.parentId !== null) {\n      data[tree[node.parentId]].children.push(node);\n    } else {\n      roots.push(node);\n    }\n  }\n\n  return roots[0];\n}\nexport function getNodeColorByEntityType(entityType) {\n  switch (entityType) {\n    case 'horizon':\n      return '#ff7675';\n\n    case 'injection':\n      return '#fdc86e';\n\n    case 'lever':\n      return '#55efc4';\n\n    case 'strategy':\n      return '#74b9ff';\n\n    default:\n      return '#afa5f3';\n  }\n}","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/pages/tree-editor/treeEditorHelper.js"],"names":["getNodeById","nodeId","unformattedTreeArray","find","node","id","treeFormatter","data","tree","roots","i","length","children","parentId","push","getNodeColorByEntityType","entityType"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,oBAA7B,EAAmD;AACtD,SAAOA,oBAAoB,CAACC,IAArB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAA9C,CAAP;AACH;AAED,OAAO,SAASK,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIL,IAAJ;AACA,MAAIM,CAAJ;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9BF,IAAAA,IAAI,CAACD,IAAI,CAACG,CAAD,CAAJ,CAAQL,EAAT,CAAJ,GAAmBK,CAAnB;AACAH,IAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,QAAR,GAAmB,EAAnB;AACH;;AACD,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9BN,IAAAA,IAAI,GAAGG,IAAI,CAACG,CAAD,CAAX;;AACA,QAAIN,IAAI,CAACS,QAAL,KAAkB,IAAtB,EAA4B;AACxBN,MAAAA,IAAI,CAACC,IAAI,CAACJ,IAAI,CAACS,QAAN,CAAL,CAAJ,CAA0BD,QAA1B,CAAmCE,IAAnC,CAAwCV,IAAxC;AACH,KAFD,MAEO;AACHK,MAAAA,KAAK,CAACK,IAAN,CAAWV,IAAX;AACH;AACJ;;AACD,SAAOK,KAAK,CAAC,CAAD,CAAZ;AACH;AAED,OAAO,SAASM,wBAAT,CAAkCC,UAAlC,EAA8C;AACjD,UAAQA,UAAR;AACI,SAAK,SAAL;AACI,aAAO,SAAP;;AACJ,SAAK,WAAL;AACI,aAAO,SAAP;;AACJ,SAAK,OAAL;AACI,aAAO,SAAP;;AACJ,SAAK,UAAL;AACI,aAAO,SAAP;;AACJ;AACI,aAAO,SAAP;AAVR;AAYH","sourcesContent":["export function getNodeById(nodeId, unformattedTreeArray) {\n    return unformattedTreeArray.find(node => node.id === nodeId);\n}\n\nexport function treeFormatter(data) {\n    let tree = {};\n    let roots = [];\n    let node;\n    let i;\n    for (i = 0; i < data.length; i++) {\n        tree[data[i].id] = i;\n        data[i].children = [];\n    }\n    for (i = 0; i < data.length; i++) {\n        node = data[i];\n        if (node.parentId !== null) {\n            data[tree[node.parentId]].children.push(node);\n        } else {\n            roots.push(node);\n        }\n    }\n    return roots[0];\n}\n\nexport function getNodeColorByEntityType(entityType) {\n    switch (entityType) {\n        case 'horizon':\n            return '#ff7675';\n        case 'injection':\n            return '#fdc86e';\n        case 'lever':\n            return '#55efc4';\n        case 'strategy':\n            return '#74b9ff';\n        default:\n            return '#afa5f3';\n    }\n}\n"]},"metadata":{},"sourceType":"module"}