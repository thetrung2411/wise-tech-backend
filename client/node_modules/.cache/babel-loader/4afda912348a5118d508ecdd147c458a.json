{"ast":null,"code":"var _jsxFileName = \"/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/preview-bar/editNode.layout.jsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport cogoToast from 'cogo-toast';\nimport { SET_NODE_ATTRIBUTES } from '../../services/graphQL/editorApiHelper';\nEditingContent.propTypes = {\n  formData: PropTypes.object.isRequired,\n  toggleViewingMode: PropTypes.func.isRequired,\n  updateCurrentNode: PropTypes.func.isRequired,\n  isParentRootNode: PropTypes.bool.isRequired\n};\n\nfunction EditingContent(props) {\n  const [formData, setFormData] = useState(props.formData);\n  const [mutateNodeAttributes] = useMutation(SET_NODE_ATTRIBUTES);\n\n  function handleFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(formData => ({ ...formData,\n      [name]: value\n    }));\n  }\n\n  function updateCurrentNode(event) {\n    event.preventDefault();\n    mutateNodeAttributes({\n      variables: {\n        id: formData.id,\n        and: formData.and,\n        because: formData.because,\n        description: formData.description,\n        entityType: formData.entityType,\n        if: formData.if,\n        logic: formData.logic,\n        name: formData.name,\n        necessity: formData.necessity,\n        optionalityAndSequence: formData.optionalityAndSequence,\n        parentId: formData.parentId,\n        referenceId: formData.referenceId,\n        sufficiency: formData.sufficiency,\n        tactic: formData.tactic,\n        then: formData.then\n      }\n    }).then(res => {\n      setFormData(res.data.updateNodeAttributes);\n      cogoToast.success(`Updated node ${formData.referenceId}`);\n      props.updateCurrentNode(formData);\n      props.toggleViewingMode();\n    }).catch(() => cogoToast.error(`Failed to update node ${formData.referenceId}`));\n  }\n\n  useEffect(() => {}, [formData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: updateCurrentNode,\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Reference ID\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"previewBar-inputGroup-input\",\n    name: \"referenceId\",\n    value: formData.referenceId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), !formData.isRoot ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Entity Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"entityType\",\n    value: formData.entityType ? formData.entityType : '',\n    className: \"previewBar-inputGroup-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, props.isParentRootNode ? /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"horizon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, \"Horizon\") : null, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"lever\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Lever\"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"injection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Injection\"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"previewBar-inputGroup-dropdown-item\",\n    value: \"strategy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, \"Strategy\"))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"previewBar-inputGroup-input\",\n    name: \"name\",\n    value: formData.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"description\",\n    value: formData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Tactic\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"tactic\",\n    value: formData.tactic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Necessity\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"necessity\",\n    value: formData.necessity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"Logic\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"logic\",\n    value: formData.logic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, \"If\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"if\",\n    value: formData.if,\n    placeholder: formData.necessity !== '' ? '[If] is recommended if you have [Necessity]' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"and\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"and\",\n    value: formData.and,\n    placeholder: formData.tactic !== '' ? '[And] is recommended if you have [Tactic]' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, \"then\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"then\",\n    value: formData.then,\n    placeholder: formData.description !== '' ? '[Then] is recommended if you have [Description]' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, \"because\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"because\",\n    value: formData.because,\n    placeholder: formData.logic !== '' ? '[Because] is recommended if you have [Logic]' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Sufficiency\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"sufficiency\",\n    value: formData.sufficiency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"previewBar-inputGroup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, \"Optionality & Sequence\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"previewBar-inputGroup-textarea\",\n    name: \"optionalityAndSequence\",\n    value: formData.optionalityAndSequence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewBar-ctaGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBar-ctaGroup-button previewBar-ctaGroup-button--negative\",\n    onClick: props.toggleViewingMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"Cancel Changes\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBar-ctaGroup-button previewBar-ctaGroup-button--positive\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"Save Changes\")))));\n}\n\nexport default EditingContent;","map":{"version":3,"sources":["/Users/thetrung/Downloads/wtg-backendv2-master@42dd489862c/client/src/components/preview-bar/editNode.layout.jsx"],"names":["React","useState","useEffect","PropTypes","useMutation","cogoToast","SET_NODE_ATTRIBUTES","EditingContent","propTypes","formData","object","isRequired","toggleViewingMode","func","updateCurrentNode","isParentRootNode","bool","props","setFormData","mutateNodeAttributes","handleFormChange","event","name","value","target","preventDefault","variables","id","and","because","description","entityType","if","logic","necessity","optionalityAndSequence","parentId","referenceId","sufficiency","tactic","then","res","data","updateNodeAttributes","success","catch","error","display","isRoot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport cogoToast from 'cogo-toast';\nimport { SET_NODE_ATTRIBUTES } from '../../services/graphQL/editorApiHelper';\n\nEditingContent.propTypes = {\n    formData: PropTypes.object.isRequired,\n    toggleViewingMode: PropTypes.func.isRequired,\n    updateCurrentNode: PropTypes.func.isRequired,\n    isParentRootNode: PropTypes.bool.isRequired,\n};\n\nfunction EditingContent(props) {\n    const [formData, setFormData] = useState(props.formData);\n    const [mutateNodeAttributes] = useMutation(SET_NODE_ATTRIBUTES);\n\n    function handleFormChange(event) {\n        const { name, value } = event.target;\n        setFormData(formData => ({\n            ...formData,\n            [name]: value,\n        }));\n    }\n\n    function updateCurrentNode(event) {\n        event.preventDefault();\n        mutateNodeAttributes({\n            variables: {\n                id: formData.id,\n                and: formData.and,\n                because: formData.because,\n                description: formData.description,\n                entityType: formData.entityType,\n                if: formData.if,\n                logic: formData.logic,\n                name: formData.name,\n                necessity: formData.necessity,\n                optionalityAndSequence: formData.optionalityAndSequence,\n                parentId: formData.parentId,\n                referenceId: formData.referenceId,\n                sufficiency: formData.sufficiency,\n                tactic: formData.tactic,\n                then: formData.then,\n            },\n        })\n            .then(res => {\n                setFormData(res.data.updateNodeAttributes);\n                cogoToast.success(`Updated node ${formData.referenceId}`);\n                props.updateCurrentNode(formData);\n                props.toggleViewingMode();\n            })\n            .catch(() => cogoToast.error(`Failed to update node ${formData.referenceId}`));\n    }\n\n    useEffect(() => {}, [formData]);\n\n    return (\n        <div>\n            <form onSubmit={updateCurrentNode} onChange={handleFormChange}>\n                <input type='submit' style={{ display: 'none' }} />\n                <div className='previewBar'>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Reference ID</label>\n                        <input\n                            className='previewBar-inputGroup-input'\n                            name='referenceId'\n                            value={formData.referenceId}\n                        ></input>\n                    </div>\n                    {!formData.isRoot ? (\n                        <div className='previewBar-inputGroup'>\n                            <label className='previewBar-inputGroup-label'>Entity Type</label>\n                            <select\n                                name='entityType'\n                                value={formData.entityType ? formData.entityType : ''}\n                                className='previewBar-inputGroup-dropdown'\n                            >\n                                {props.isParentRootNode ? (\n                                    <option className='previewBar-inputGroup-dropdown-item' value='horizon'>\n                                        Horizon\n                                    </option>\n                                ) : null}\n                                <option className='previewBar-inputGroup-dropdown-item' value='lever'>\n                                    Lever\n                                </option>\n                                <option className='previewBar-inputGroup-dropdown-item' value='injection'>\n                                    Injection\n                                </option>\n                                <option className='previewBar-inputGroup-dropdown-item' value='strategy'>\n                                    Strategy\n                                </option>\n                            </select>\n                        </div>\n                    ) : null}\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Name</label>\n                        <input className='previewBar-inputGroup-input' name='name' value={formData.name}></input>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Description</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='description'\n                            value={formData.description}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Tactic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='tactic'\n                            value={formData.tactic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Necessity</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='necessity'\n                            value={formData.necessity}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Logic</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='logic'\n                            value={formData.logic}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>If</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='if'\n                            value={formData.if}\n                            placeholder={formData.necessity !== '' ? '[If] is recommended if you have [Necessity]' : ''}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>and</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='and'\n                            value={formData.and}\n                            placeholder={formData.tactic !== '' ? '[And] is recommended if you have [Tactic]' : ''}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>then</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='then'\n                            value={formData.then}\n                            placeholder={\n                                formData.description !== '' ? '[Then] is recommended if you have [Description]' : ''\n                            }\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>because</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='because'\n                            value={formData.because}\n                            placeholder={formData.logic !== '' ? '[Because] is recommended if you have [Logic]' : ''}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Sufficiency</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='sufficiency'\n                            value={formData.sufficiency}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-inputGroup'>\n                        <label className='previewBar-inputGroup-label'>Optionality &amp; Sequence</label>\n                        <textarea\n                            className='previewBar-inputGroup-textarea'\n                            name='optionalityAndSequence'\n                            value={formData.optionalityAndSequence}\n                        ></textarea>\n                    </div>\n                    <div className='previewBar-ctaGroup'>\n                        <button\n                            className='previewBar-ctaGroup-button previewBar-ctaGroup-button--negative'\n                            onClick={props.toggleViewingMode}\n                        >\n                            Cancel Changes\n                        </button>\n                        <button\n                            className='previewBar-ctaGroup-button previewBar-ctaGroup-button--positive'\n                            type='submit'\n                        >\n                            Save Changes\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default EditingContent;\n"]},"metadata":{},"sourceType":"module"}